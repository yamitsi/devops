# Prerequisites

1. Install Docker
2. Install Kubectl and kubeadm
3. Install kubernetes

# Useful commands & links

```
vagrant up
kubeadm init
kubeadm join --token <token> 10.10.0.11:<master-port> --discovery-token-ca-cert-hash sha256:<hash>

#basic commands for kubectl
kubectl create -f <YAML_FILE>
kubectl get
kubectl get nodes
kubectl get pods
kubectl get services (= kubectl get svc)
kubectl describe service <NAME>
kubectl describe pod <NAME>
kubectl logs <POD_NAME>
```

# Instructions

1. Start a new Kubernetes cluster using `kubeadm`
2. Make sure that your cluster is running
3. Check that your `kubectl` is connected to the new cluster. You can verify it by checking the node names in the cluster (`kubectl get nodes`)
3. Upload the configuration defined in `hello-world.yml` file (`kubectl create -f <file-name>`)
    kubectl create -f hello-world.yml
    
4. Wait until the application's pod will be in the **running** state by querying it's status with
`kubectl get pods` command
    1. If it's not running yet, can you check why? Use the describe command
    mentioned below and look at the **Events** field.
5. View the application's pod definition by using the `kubectl describe pod
<POD_NAME>` command
    1. Can you discover pod's internal IP address?
    2. How about it's node. Can you find the IP of the node that is running this pod?
7. Access the service hello-world in the browser
8. Now let's stop the application by running `kubectl delete pod <NAME>`
9. Can you access it's UI now? Are there any listed endpoints for the applications service? (`kubectl describe service hello-world`)

